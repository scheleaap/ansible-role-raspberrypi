---
# tasks file for raspberrypi

- name: "Ensure that the external sound card is used"
  template:
    src: templates/asoundrc.j2
    dest: "{{ ansible_env.HOME }}/.asoundrc"
    mode: 0644


# Source: https://learn.adafruit.com/read-only-raspberry-pi/

# # Remove unwanted packages and replace log management with busybox (use logread if needed)
#
# - name: "Ensure certain packages are not installed"
#   become: true
#   apt:
#     name: "{{ item }}"
#     state: absent
#     purge: yes
#   with_items:
#     - triggerhappy
#     - cron
#     - logrotate
#     - dphys-swapfile
#     - xserver-common
#     - lightdm
#     - fake-hwclock
#     - rsyslog
#
# - name: "Ensure certain packages are installed"
#   become: true
#   apt:
#     name: "{{ item }}"
#     state: present
#     purge: yes
#   with_items:
#     - openssh-server  # Added for testing. Should be installed by default.
#     - busybox-syslogd
#
# - name: "Ensure temporary directories are mounted as tmpfs"
#   become: true
#   lineinfile:
#     path: /etc/fstab
#     line: "tmpfs {{ item }} tmpfs nodev,nosuid 0 0"
#   with_items:
#     #- /var/spool
#     - "/tmp               "
#     - "/var/cache/mopidy  "
#     - "/var/cache/unbound "
#     - "/var/log           "
#     - "/var/lib/dhcpcd5   "
#     - "/var/log/mopidy    "
#     - "/var/lib/mopidy    "
#     - "/var/lib/snapserver"
#     - "/var/tmp           "
#
# # Move dhcpd.resolv.conf to tmpfs
#
# - name: "Ensure /tmp/resolv.conf exists"
#   become: true
#   copy:
#     dest: /tmp/resolv.conf
#     src: resolv.conf.default
#     owner: root
#     group: root
#     mode: 644
#     force: no  # Only copy the file if the destination does not exist.
# - name: "Retrieve status of /etc/resolv.conf"
#   stat:
#     path: /etc/resolv.conf
#   register: etc_resolv_conf
# - name: "Ensure /etc/resolv.conf is not a regular file"
#   become: true
#   file:
#     path: /etc/resolv.conf
#     state: absent
#   when: etc_resolv_conf.stat.exists and etc_resolv_conf.stat.isreg
#   ignore_errors: yes  # Added for testing. Changing /etc/resolv.conf does not work in Docker.
# - name: "Ensure /etc/resolv.conf links to /tmp/resolv.conf"
#   become: true
#   file:
#     dest: /etc/resolv.conf
#     state: link
#     src: /tmp/resolv.conf
#   ignore_errors: yes  # Added for testing. Changing /etc/resolv.conf does not work in Docker


# |# Make SSH work
# |
# |- name: "Ensure the SSH server does not use privilege separation"
# |  become: true
# |  replace:
# |    path: /etc/ssh/sshd_config
# |    regexp: '^.*UsePrivilegeSeparation.*$'
# |    replace: 'UsePrivilegeSeparation no'
# |    backup: yes
# |
# |
# |# Change spool permissions in var.conf (rondie/Margaret fix)
# |
# |- name: "Ensure the right permissions are set for the temporary directory /var/spool"
# |  become: true
# |  replace:
# |    path: /usr/lib/tmpfiles.d/var.conf
# |    regexp: '^(d\s+/var/spool\s+)0755(.*)$'
# |    replace: '\g<1>1777\g<2>'
# |    backup: yes
# |
# |
# |# Make edits to fstab
# |
# |- name: "Ensure / is mounted read-only"
# |  become: true
# |  replace:
# |    path: /etc/fstab
# |    # PARTUUID=2db898db-02  /               ext4    defaults,noatime  0       1
# |    regexp: '^(.*/\s+ext4\s+)defaults,noatime(\s+.*)$'
# |    replace: '\1defaults,noatime,ro\2'
# |    backup: yes
# |- name: "Ensure /boot is mounted read-only"
# |  become: true
# |  replace:
# |    path: /etc/fstab
# |    # PARTUUID=2db898db-01  /boot           vfat    defaults          0       2
# |    regexp: '^(.*/boot\s+vfat\s+)defaults(\s+.*)$'
# |    replace: '\1defaults,ro\2'
# |    backup: yes


# # Add fastboot, noswap and/or ro to end of /boot/cmdline.txt
#
# - name: "Ensure that /boot/cmdline.txt exists"  # Added for testing. Should be present by default.
#   become: true
#   copy:
#     dest: /boot/cmdline.txt
#     src: cmdline.txt.default
#     owner: root
#     group: root
#     mode: 644
#     force: no  # Only copy the file if the destination does not exist.
# - name: "Ensure that the Raspberry Pi is started with 'fastboot'"
#   become: true
#   replace:
#     path: /boot/cmdline.txt
#     regexp: '^((?:.(?!fastboot))*)$'
#     replace: '\1 fastboot'
#     backup: no  # Because the filenames Ansible creates do not work on FAT32. See https://github.com/ansible/ansible/issues/10591.
# - name: "Ensure that the Raspberry Pi is started with 'noswap'"
#   become: true
#   replace:
#     path: /boot/cmdline.txt
#     regexp: '^((?:.(?!noswap))*)$'
#     replace: '\1 noswap'
#     backup: no  # Because the filenames Ansible creates do not work on FAT32. See https://github.com/ansible/ansible/issues/10591.
# |- name: "Ensure that the Raspberry Pi is started with 'ro'"
# |  become: true
# |  replace:
# |    path: /boot/cmdline.txt
# |    regexp: '^((?!ro(?:\s|$))(?:.(?!ro(?:\s|$)))*)$'
# |    replace: '\1 ro'
# |    # backup: yes
# |    backup: no  # Because the filenames Ansible creates do not work on FAT32. See https://github.com/ansible/ansible/issues/10591.
